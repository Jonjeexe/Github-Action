name: Generate Device Tree

on:
  workflow_dispatch:
  push:

jobs:
  gen-tree:
    runs-on: ubuntu-latest
    env:
      FIRMWARE_ID: "1-65PV4enM35j72dhMa4STSMwLNdqR-NV"
      TG_CHAT_ID: "1910625218"
      TG_BOT_TOKEN: "7863915048:AAG0PjWioCIeIlP9kDdvsTDkKfJ2J57dR-Q"

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y p7zip-full unzip curl python3-pip
        pip3 install dumpyara aospdtgen gdown oppo-decrypt

    - name: Download firmware
      run: |
        mkdir firmware
        gdown "$FIRMWARE_ID" -O firmware/fw.zip
        ls -lh firmware

    - name: Extract firmware (multi-method)
      run: |
        cd firmware
        echo "::group::dumpyara"
        python3 -m dumpyara fw.zip || echo "dumpyara failed"
        echo "::endgroup::"

        echo "::group::7z"
        7z x fw.zip -o7z || true
        echo "::endgroup::"

        echo "::group::unzip"
        unzip -o fw.zip -d unzip || true
        echo "::endgroup::"

        echo "::group::oppo-decrypt"
        OFP=$(ls *.ofp 2>/dev/null | head -n1 || true)
        if [ -n "$OFP" ]; then
          mkdir -p ofp
          python3 -m oppo_decrypt "$OFP" ofp || true
        fi
        echo "::endgroup::"

    - name: Find extracted images
      id: findimg
      run: |
        IMG_DIR=$(find firmware -type f -name "*.img" -printf '%h\n' | sort -u | head -n1 || true)
        if [ -z "$IMG_DIR" ]; then
          echo "No .img files found!"
          echo "found=0" >> $GITHUB_OUTPUT
        else
          echo "Found .img files in: $IMG_DIR"
          echo "found=1" >> $GITHUB_OUTPUT
          echo "path=$IMG_DIR" >> $GITHUB_OUTPUT
        fi

    - name: Run aospdtgen
      if: steps.findimg.outputs.found == '1'
      run: |
        mkdir -p device/infinix/X6815D
        python3 -m aospdtgen -o device/infinix/X6815D "${{ steps.findimg.outputs.path }}"
        ls -R device/infinix/X6815D

    - name: Zip device tree
      if: steps.findimg.outputs.found == '1'
      run: |
        zip -r tree.zip device/infinix/X6815D

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: device-tree
        path: |
          firmware
          device/infinix/X6815D
          tree.zip

    - name: Telegram notification
      if: always()
      run: |
        LINK="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
        STATUS="✅ Success"
        if [ "${{ steps.findimg.outputs.found }}" != "1" ]; then
          STATUS="❌ Failed (no .img files)"
        fi
        MSG="Device tree run finished.\nStatus: $STATUS\n$LINK"
        curl -s "https://api.telegram.org/bot${TG_BOT_TOKEN}/sendMessage" \
          -d chat_id="$TG_CHAT_ID" \
          -d text="$MSG"
