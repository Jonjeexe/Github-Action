name: Generate Device Tree (X6815D)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-tree:
    runs-on: ubuntu-latest
    env:
      FIRMWARE_URL: "https://drive.usercontent.google.com/download?id=1-65PV4enM35j72dhMa4STSMwLNdqR-NV&export=download&authuser=1"
      TG_CHAT_ID: "1910625218"
      TG_BOT_TOKEN: "7863915048:AAG0PjWioCIeIlP9kDdvsTDkKfJ2J57dR-Q"

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Install deps
      run: |
        sudo apt-get update -y
        sudo apt-get install -y git python3 python3-pip unzip curl
        pip3 install dumpyara aospdtgen

    - name: Download firmware
      run: |
        mkdir -p firmware
        curl -L -o firmware/fw.zip "${FIRMWARE_URL}"
        ls -lh firmware

    - name: Extract firmware with dumpyara
      run: |
        cd firmware
        python3 -m dumpyara fw.zip || true
        ls -lh

    - name: Find dump dir
      id: dump
      run: |
        DUMP_DIR=$(find firmware -maxdepth 1 -type d ! -path firmware | head -n1)
        echo "dump_dir=$DUMP_DIR" >> $GITHUB_OUTPUT
        ls -lh "$DUMP_DIR"

    - name: Generate device tree
      run: |
        DUMP="${{ steps.dump.outputs.dump_dir }}"
        python3 -m aospdtgen -o device/infinix/X6815D "$DUMP"
        ls -lh device/infinix/X6815D

    - name: Extract boot.img & prebuilt kernel
      run: |
        mkdir -p device/infinix/X6815D/prebuilt
        DUMP="${{ steps.dump.outputs.dump_dir }}"
        BOOTIMG=$(find "$DUMP" -type f -iname "boot*.img" | head -n1 || true)
        if [ -z "$BOOTIMG" ]; then
          echo "No boot.img found, skipping kernel extraction"
        else
          echo "Found boot.img: $BOOTIMG"
          curl -L -o magisk.zip https://github.com/topjohnwu/Magisk/releases/latest/download/Magisk-v28.1.zip || true
          unzip -j magisk.zip "*/magiskboot" -d .
          chmod +x magiskboot || true
          ./magiskboot unpack "$BOOTIMG" || true
          for f in kernel dtb dtbo.img ramdisk.cpio; do
            [ -f "$f" ] && mv "$f" device/infinix/X6815D/prebuilt/"$f"
          done
        fi
        ls -lh device/infinix/X6815D/prebuilt || true

    - name: Upload device tree artifact
      uses: actions/upload-artifact@v4
      with:
        name: device-tree-X6815D
        path: device/infinix/X6815D

    - name: Save workflow logs
      if: always()
      run: |
        mkdir logs
        cp $GITHUB_WORKSPACE/../*/*.txt logs/ || true
        dmesg > logs/dmesg.txt || true
        journalctl -xe > logs/journal.txt || true
        echo "Logs saved"

    - name: Upload logs artifact
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: logs

    - name: Send Telegram notification
      if: always()
      run: |
        STATUS="✅ Device tree generated successfully!"
        if [ "${{ job.status }}" != "success" ]; then
          STATUS="❌ Workflow failed. Logs uploaded."
        fi
        curl -s -X POST "https://api.telegram.org/bot${TG_BOT_TOKEN}/sendMessage" \
          -d chat_id="${TG_CHAT_ID}" \
          -d parse_mode="Markdown" \
          -d text="*X6815D Device Tree Build*\n\nStatus: ${STATUS}\nRun: $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
          
