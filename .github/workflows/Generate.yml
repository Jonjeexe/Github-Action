name: Generate Device Tree (X6815D)

on: [workflow_dispatch, push]

jobs:
  gen-tree:
    runs-on: ubuntu-latest
    env:
      FIRMWARE_ID: "1-65PV4enM35j72dhMa4STSMwLNdqR-NV"
      TG_CHAT_ID: "1910625218"
      TG_BOT_TOKEN: "7863915048:AAG0PjWioCIeIlP9kDdvsTDkKfJ2J57dR-Q"

    steps:
    - uses: actions/checkout@v4

    - name: Install tools
      run: |
        sudo apt-get update && sudo apt-get install -y p7zip-full unzip curl
        pip3 install dumpyara aospdtgen gdown oppo-decrypt

    - name: Download firmware
      run: |
        mkdir firmware
        gdown "$FIRMWARE_ID" -O firmware/fw.zip
        ls -l firmware

    - name: Extract firmware
      run: |
        cd firmware
        echo "::group::dumpyara extract"
        python3 -m dumpyara fw.zip || echo "::warning::dumpyara failed"
        ls -l
        echo "::endgroup::"
        echo "::group::7z extract"
        7z x fw.zip -o7z && ls -l 7z || echo "::warning::7z failed"
        echo "::endgroup::"
        echo "::group::unzip extract"
        unzip fw.zip -d unzip && ls -l unzip || echo "::warning::unzip failed"
        echo "::endgroup::"
        echo "::group::oppo-decrypt extract (for .ofp)"
        OFP=$(ls *.ofp 2>/dev/null | head -n1 || true)
        if [ -n "$OFP" ]; then
          python3 -m oppo_decrypt "$OFP" ofp
          ls -l ofp
        else
          echo "::warning::No .ofp found"
        fi
        echo "::endgroup::"

    - name: Collect dump paths
      id: dump
      run: |
        for d in 7z firmware ofp unzip; do
          [ -d "$d" ] && [ -n "$(ls -A $d)" ] && echo "dump=$d" >> $GITHUB_OUTPUT && exit 0
        done
        echo "::warning::No valid dump folder found"

    - name: Log dump contents
      run: |
        D="${{ steps.dump.outputs.dump }}"
        echo "::group::Dump contents from $D"
        ls -l "$D" || echo "::warning::$D not found"
        echo "::endgroup::"

    - name: Run aospdtgen
      run: |
        D="${{ steps.dump.outputs.dump }}"
        mkdir -p device/infinix/X6815D
        python3 -m aospdtgen -o device/infinix/X6815D "$D" || echo "::warning::aospdtgen failed"
        ls -R device/infinix/X6815D || echo "::warning::device tree empty"

    - name: Zip device tree
      run: |
        if [ -d device/infinix/X6815D ] && [ "$(ls -A device/infinix/X6815D)" ]; then
          zip -r tree.zip device/infinix/X6815D
        else
          echo "::warning::no tree to zip"
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: logs-tree
        path: |
          firmware
          device/infinix/X6815D
          tree.zip

    - name: Telegram update
      run: |
        LINK="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
        curl -s "https://api.telegram.org/bot${TG_BOT_TOKEN}/sendMessage" \
          -d chat_id="$TG_CHAT_ID" \
          -d text="Run completed. Logs & tree: $LINK"
          
